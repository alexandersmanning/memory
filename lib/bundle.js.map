{"version":3,"sources":["webpack:///webpack/bootstrap 0e0dffe41efcdafdd7bb","webpack:///./lib/main.js","webpack:///./lib/deck.js","webpack:///./lib/card.js","webpack:///./lib/game.js","webpack:///./lib/view.js","webpack:///./lib/computer_player.js","webpack:///./lib/player.js"],"names":["document","addEventListener","getElementById","e","window","location","reload","newGame","players","classList","toggle","board","innerHTML","game","setUpScoreBoard","labelText","text","playerContainer","scoreText","playerScores","forEach","createElement","player","color","appendChild","id","VALUES","SUITS","Deck","cards","setDeck","cardSet","push","suit","value","shuffleDeck","shuffled","removedCard","i","length","splice","parseInt","Math","random","idx","revealed","revealCard","validList","Card","Game","gameDeck","currentPlayer","selectedCards","allRevealed","availableMoves","nextMove","getInput","undefined","setTimeout","querySelector","click","guessSet","validMove","setVisible","getCard","receiveRevealedCard","previousGuess","setGuess","Error","hideCards","verifyMatch","playTurn","cardOne","cardTwo","receiveMatch","setFound","updateScore","nextTurn","hideCard","add","matchFound","scoreElement","points","isVisible","View","gameStatus","canInteract","setupBoard","addListener","li","textNode","deck","className","faceDown","event","makeMove","target","parentElement","playMove","displayCard","checkCards","bind","gameOver","body","remove","span","src","back","returnedCards","swapPlayers","setInteraction","ComputerPlayer","seenCards","card","baseSet","indexOf","concat","locations","foundIdx","makeSecondGuess","makeFirstGuess","firstGuess","checkUnmatchedPositions","randomPosition","secondGuess","checkPreviousMatch","count","seenValues","Object","keys","cardValue","seenMoves","randomIdx","Player","valueSet"],"mappings":"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","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0e0dffe41efcdafdd7bb","import Game from \"./game\";\nimport View from \"./view\";\nimport Player from \"./player\";\nimport ComputerPlayer from \"./computer_player\";\n\t\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n\tdocument.getElementById(\"new-game\").addEventListener(\"click\", (e) => {\n\t\twindow.location.reload();\n\t})\n\n\tdocument.getElementById(\"1p\").addEventListener(\"click\", (e) => {\n\t\tnewGame([new Player(\"green\")]);\n\t});\n\n\tdocument.getElementById(\"1pv1p\").addEventListener(\"click\", (e) => {\n\t\tnewGame([new Player(\"green\"), new Player(\"yellow\")]);\n\t});\n\n\tdocument.getElementById(\"1pv1c\").addEventListener(\"click\", (e) => {\n\t\tnewGame([new Player(\"green\"), new ComputerPlayer(\"yellow\")]);\n\t});\n\t\n});\n\nconst newGame = (players) => {\n\tdocument.getElementById(\"button-modal\").classList.toggle(\"hidden\")\n\tlet board = document.getElementById('board');\n\tboard.innerHTML = \"\";\n\t\n\tlet game = new Game(players);\n\n\tdocument.getElementById(\"score-box\").classList.toggle(\"hidden\");\n\tsetUpScoreBoard(players);\n\t\n\tnew View(game, board)\n}\n\nconst setUpScoreBoard = (players) => {\n\tlet labelText, text, playerContainer, scoreText; \n\tlet playerScores = document.getElementById(\"scores-by-player\");\n\n\tplayers.forEach( player => {\n\t\tplayerContainer = document.createElement(\"div\");\n\t\tlabelText = document.createElement(\"h4\");\n\t\tlabelText.innerHTML = `${player.color}: `\n\t\tplayerContainer.appendChild(labelText);\n\n\t\tscoreText = document.createElement(\"h4\");\n\t\tscoreText.id = `player-${player.color}-score`;\n\t\tscoreText.innerHTML = \"0\";\n\t\tplayerContainer.appendChild(scoreText);\n\n\t\tplayerScores.appendChild(playerContainer)\n\t})\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/main.js","import Card from './card';\n\n//The deck class uses the below two constants to make a deck of 52 unique cards.\n\nconst VALUES = [\"A\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"J\",\"Q\",\"K\"];\nconst SUITS = [\"club\",\"spade\",\"diamond\",\"heart\"];\n\nclass Deck {\n\tconstructor(){\n\t\tthis.cards = this.setDeck();\n\t}\n\n\tsetDeck(){\n\t\t// cycles through each suit, and then each value, creating 13 cards for each suit to be pushed into an array. This function then calls the shuffle deck function to create a randomized output\n\n\t\tlet cardSet = [];\n\t\tSUITS.forEach(suit => {\n\t\t\tVALUES.forEach(value => {\n\t\t\t\tcardSet.push(new Card(suit, value))\n\t\t\t})\n\t\t})\n\n\t\treturn this.shuffleDeck(cardSet);\n\t}\n\n\tshuffleDeck(cardSet){\n\t\t//This method takes a sorted deck, and randomly removes entries, which it pushes into a new array, until the original sorted deck is empty. This is currently O(n) time, and O(n) space. \n\n\t\tlet shuffled = [];\n\t\tlet removedCard; \n\n\t\tfor (let i = cardSet.length; i > 0; i--) {\n\t\t\tremovedCard = cardSet.splice(parseInt(Math.random() * i), 1)[0];\n\t\t\tshuffled.push(removedCard)\n\t\t}\n\n\t\treturn shuffled;\n\t}\n\n\tisVisible(idx) {\n\t\t//Simple method to directly look at a card from a deck. This is to meet Demeter's law, in which an object is only talking to its closest neighbors \n\n\t\treturn this.cards[idx].revealed;\n\t}\n\n\tsetVisible(idx) {\n\t\t//Same as is visible, this function is just to ensure that objects are only talking to their closest neighbors\n\n\t\tthis.cards[idx].revealCard();\n\t}\n\n\tgetCard(idx) {\n\t\treturn this.cards[idx];\n\t}\n\n\tallRevealed() {\n\t\t//Simple method for telling the game if all cards are revealed, and therefore the game is over \n\t\t\n\t\tfor (let i = 0; i < this.cards.length; i++) {\n\t\t\tif (!this.cards[i].revealed) { return false }\n\t\t}\n\t\treturn true;\n\t}\n\n\tavailableMoves() {\n\t\t//creates a list of available moves, which is used by the computer class.\n\n\t\tlet validList = [];\n\n\t\tfor (let i = 0; i < this.cards.length; i++) {\n\t\t\tif(!this.cards[i].revealed) { \n\t\t\t\tvalidList.push(i);\n\t\t\t}\n\t\t}\n\t\treturn validList;\n\t}\n}\n\nexport default Deck;\n\n\n// WEBPACK FOOTER //\n// ./lib/deck.js","// The card class sets up attributes for each card, to be used by the deck\n\nclass Card {\n\tconstructor(suit, value) {\n\t\tthis.suit = suit;\n\t\tthis.value = value;\n\t\tthis.revealed = false;\n\t}\n\n\trevealCard(){\n\t\tthis.revealed = true;\n\t}\n\n\thideCard(){\n\t\tthis.revealed = false;\n\t}\n\n\tgetValue(){\n\t\tif (this.revealed) { return this.value }\n\t}\n}\n\nexport default Card;\n\n\n// WEBPACK FOOTER //\n// ./lib/card.js","import Deck from './deck';\n\n//The game class controls all of the game logic, and is used by the view to verify and make updates based on user input\n\nclass Game {\n\tconstructor(players) {\n\t\tthis.gameDeck = new Deck();\n\t\tthis.players = players;\n\t\tthis.currentPlayer = players[0];\n\t\tthis.selectedCards = [];\n\t}\n\n\tgameOver() {\n\t\treturn this.gameDeck.allRevealed();\n\t}\n\n\tplayTurn() {\n\t\t// This function is used by the computer player, and always returns undefined by a human player, in which a click action from the view directly calls playMove.\n\n\t\t//Actual click actions are performed by the computer to avoid having to put the view as part of the game. This decision has a number of positives and negatives, something I would love to discuss during an interview \n\n\t\tlet availableMoves = this.gameDeck.availableMoves();\n\t\tlet nextMove = this.currentPlayer.getInput(availableMoves);\n\t\tif (nextMove !== undefined) { \n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.querySelector(`[id = '${nextMove}'] img`).click();\n\t\t\t}, 500);\n\t\t};\n\t}\n\n\tplayMove(id) {\n\t\t//called by the view. This function verifies if a move is legal, and provide both players the revealed card if it is \n\n\t\tlet idx = parseInt(id)\n\t\tlet guessSet;\n\n\t\tif (this.validMove(idx)) {\n\t\t\tthis.selectedCards.push(idx);\n\t\t\tthis.gameDeck.setVisible(idx);\n\n\t\t\tguessSet = [this.gameDeck.getCard(idx), idx]\n\n\t\t\tthis.players.forEach(player => {\n\t\t\t\tplayer.receiveRevealedCard(...guessSet) \n\t\t\t});\n\n\t\t\tif (!this.currentPlayer.previousGuess) {\n\t\t\t\tthis.currentPlayer.setGuess(guessSet);\n\t\t\t}\n\t\t} else {\n\t\t\t\tthrow new Error('Not a valid card');\n\t\t}\n\t}\n\n\tcheckCards(hideCards) {\n\t\t// called by the view to check which move this is for the current player, and to verify the cards match if it is the second move \n\n\t\tif (this.selectedCards.length === 2 ){\n\t\t\t\tthis.verifyMatch(hideCards);\n\t\t\t} else {\n\t\t\t\tthis.playTurn()\n\t\t\t}\n\t}\n\n\tverifyMatch(hideCards) {\n\t\t//When two cards have been selected, the system verifies if they match. If so, the match is sent to both players, if not the cards are hidden\n\n\t\tlet cardOne = this.gameDeck.getCard(this.selectedCards[0]);\n\t\tlet cardTwo = this.gameDeck.getCard(this.selectedCards[1]);\n\n\t\tif (cardOne.value == cardTwo.value) { \n\t\t\tthis.players.forEach(player => {\n\t\t\t\tplayer.receiveMatch(cardOne.value, this.selectedCards) \n\t\t\t});\n\n\t\t\tthis.setFound(this.currentPlayer.color);\n\t\t\tthis.updateScore(this.currentPlayer);\n\t\t\tthis.nextTurn();\n\t\t} else {\n\t\t\tcardOne.hideCard();\n\t\t\tcardTwo.hideCard();\n\t\t\thideCards(this.selectedCards);\n\t\t}\t\n\t}\n\n\tsetFound(color) {\n\t\t//Marks the cards with the founding player's color \n\n\t\tthis.selectedCards.forEach( idx => {\n\t\t\tdocument.getElementById(`${idx}`).classList.add(`selected-${color}`);\n\t\t})\n\t}\n\n\tupdateScore(player) {\n\t\t//Updates the views score element for each player\n\n\t\tplayer.matchFound();\n\n\t\tlet scoreElement = document.getElementById(`player-${player.color}-score`)\n\t\tscoreElement.innerHTML = player.points;\n\t};\n\n\tnextTurn(){\n\t\t//this sets the next turn, clearing out the selected cards and guesses. \n\n\t\tthis.currentPlayer.setGuess(null);\n\t\tthis.selectedCards = [];\n\t\tthis.playTurn();\n\t}\n\n\tvalidMove(idx) {\n\t\t//for human players, this verifies that the clicked card is valid, by checking if it is revealed \n\n\t\treturn !this.gameDeck.isVisible(idx);\n\t}\n\n}\n\nexport default Game;\n\n\n// WEBPACK FOOTER //\n// ./lib/game.js","import ComputerPlayer from \"./computer_player\";\n\n\n//this is the main class the interacts and updates the DOM. It translates user interactions into game actions\n\nclass View {\n\tconstructor(game, board) {\n\t\tthis.game = game;\n\t\tthis.board = board;\n\t\tthis.gameStatus = document.getElementById(\"game-status\");\n\t\tthis.canInteract = true;\n\t\n\t\tthis.setupBoard();\n\t\tthis.addListener();\n\t}\n\n\tsetupBoard() {\n\t\t//sets up the DOM to contain an item for each card;\n\n\t\tlet li;\n\t\tlet textNode;\n\t\tlet deck = this.game.gameDeck;\n\n\t\tfor (let i = 0; i < deck.cards.length; i++){\n\t\t\tli = document.createElement(\"li\");\n\t\t\tli.className = \"card\";\n\t\t\tli.id = i;\n\n\t\t\tthis.faceDown(li);\n\t\t\tthis.board.appendChild(li);\n\t\t}\n\t}\n\n\taddListener() {\n\t\t// Adds a simple even listener on the board, check a click on a card bubbles up to the list item, which is then acted upon using the make move function\n\n\t\tthis.board.addEventListener(\"click\", (event) =>{\n\t\t\tthis.makeMove(event.target.parentElement);\n\t\t})\n\t}\n\n\tmakeMove(li) {\t\n\t\tif (this.canInteract) {\n\t\t\tthis.gameStatus.innerHTML = \"\";\n\t\t\ttry {\n\t      this.game.playMove(li.id);\n\t    } catch (e) {\n\t    \tthis.gameStatus.innerHTML = \"Not a valid card\";\n\t      return;\n\t    }\n\n\t    this.displayCard(li);\n\t\t\tthis.game.checkCards(this.hideCards.bind(this));\n\n\t\t\tif (this.game.gameOver()) {\n\t\t\t\tthis.canInteract = false;\n\t\t\t\tthis.gameStatus.innerHTML = \"Game Over\"\n\t\t\t\tdocument.body.classList.remove(\"disable-click\");\n\t\t\t}\n\t\t}\n\t}\n\n\tdisplayCard(li) {\n\t\t//Adds a span for the displayed card, including suit and value \n\n\t\tlet deck = this.game.gameDeck;\n\t\tli.innerHTML = '';\n\t\tlet span = document.createElement(\"span\");\n\t\tspan.className = \"card-info\"\n\n\t\tlet suit = document.createElement(\"img\");\n\t\tsuit.src = `assets/images/card_${deck.cards[li.id].suit}.png`;\n\t\tsuit.className = \"suit\"\n\n\t\tlet value = document.createElement(\"h2\");\n\t\tvalue.innerHTML = `${deck.cards[li.id].value}`\n\t\t\n\t\tspan.appendChild(suit);\n\t\tspan.appendChild(value);\n\n\t\tli.appendChild(span);\n\t}\n\n\tfaceDown(li) {\n\t\tli.innerHTML = '';\n\t\tlet span = document.createElement(\"span\");\n\t\tspan.className = \"card-back\";\n\n\t\tlet back = document.createElement(\"img\");\n\t\tback.src = `assets/images/card_back.jpg`;\n\t\tback.className = \"card-back\";\n\n\t\tli.appendChild(back);\n\t}\n\n\thideCards(returnedCards) {\n\t\t//disables the users ability to click white awaiting for the cards to flip back over \n\n\t\tthis.canInteract = false;\n\t\tsetTimeout(() => {\n\t\t\t\treturnedCards.forEach( idx => {\n\t\t\t\tthis.faceDown(document.getElementById(`${idx}`));\n\t\t\t});\n\t\n\t\t\tif (this.game.players.length > 1) {\n\t\t\t\tthis.swapPlayers();\n\t\t\t} else { this.canInteract = true }\n\n\t\t\tthis.game.nextTurn();\n\n\t\t}, 1500)\n\t}\n\n\tswapPlayers(){\n\t\t//swap players happens in the view (vs the game), so that controls can be put on the view to avoid current player interaction;\n\n\t\tlet currentPlayer = this.game.currentPlayer;\n\t\tlet players = this.game.players; \n\n\t\tif (currentPlayer === players[0]) {\n\t\t\tthis.game.currentPlayer = players[1];\n\t\t} else {\n\t\t\tthis.game.currentPlayer = players[0];\n\t\t}\n\n\t\tdocument.getElementById(\"current-player-id\").innerHTML = this.game.currentPlayer.color; \n\n\t\tthis.setInteraction(this.game.currentPlayer);\n\t}\n\n\tsetInteraction(player) {\n\t\t//disables clicking until it is the players turn \n\t\tif (player instanceof ComputerPlayer) {\n\t\t\tdocument.body.classList.add(\"disable-click\");\n\t\t} else {\n\t\t\tdocument.body.classList.remove(\"disable-click\");\n\t\t}\n\n\t\tthis.canInteract = true;\n\t}\n}\n\nexport default View\n\n\n// WEBPACK FOOTER //\n// ./lib/view.js","import Player from './player';\n\nclass ComputerPlayer extends Player {\n\tconstructor(color) {\n\t\tsuper(color);\n\t\tthis.seenCards = {};\n\t}\n\n\treceiveRevealedCard(card, idx) {\n\t\tlet baseSet = (this.seenCards[card.value] || []);\n\t\tif (baseSet.indexOf(idx) < 0) {\n\t\t\tthis.seenCards[card.value] = baseSet.concat(idx);\n\t\t}\n\t}\n\n\treceiveMatch(value, locations){\n\t\t//removes found cards from set of seen cards\n\n\t\tlet foundIdx;\n\t\tlocations.forEach(idx => {\n\t\t\tfoundIdx = this.seenCards[value].indexOf(idx);\n\t\t\tif (foundIdx >= 0) { this.seenCards[value].splice(foundIdx, 1)}\n\t\t});\n\t}\n\n\tgetInput(availableMoves) {\n\t\tthis.availableMoves = availableMoves;\n\t\tif (this.previousGuess) { \n\t\t\treturn this.makeSecondGuess()\n\t\t\t} else { \n\t\t\t\treturn this.makeFirstGuess() \n\t\t\t}\n\t}\n\n\tmakeFirstGuess() {\n\t\t//check if any two are revealed\n\t\tlet firstGuess = this.checkUnmatchedPositions();\n\t\treturn (firstGuess !== undefined ? firstGuess : this.randomPosition());\n\t};\n\n\tmakeSecondGuess() {\n\t\tlet secondGuess = this.checkPreviousMatch();\n\t\treturn (secondGuess !== undefined ? secondGuess : this.randomPosition());\n\t};\n\n\tcheckUnmatchedPositions(){\n\t\t//check all values of seen cards to find cases where there is more than one idx and both are available moves\n\n\t\tlet count = [];\n\t\tlet seenValues = Object.keys(this.seenCards);\n\t\tlet cardValue;\n\n\t\tfor (let i in seenValues) {\n\t\t\tcardValue = seenValues[i];\n\t\t\tif(this.seenCards[cardValue].length >= 2) {\n\t\t\t\tthis.seenCards[cardValue].forEach( idx => {\n\t\t\t\t\tif(this.availableMoves.indexOf(idx) >= 0) {\n\t\t\t\t\t\tcount.push(idx);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (count.length > 1){ return count[0] };\n\t\t\t}\n\t\t}\n\t}\n\n\tcheckPreviousMatch(){\n\t\t// find if the seen cards contain the value, and if that value is a valid guess\n\t\t\n\t\tlet value, idx, seenMoves;\n\n\t\tif (this.previousGuess) {\n\t\t\tvalue = this.previousGuess[0].value;\n\t\t\tidx = this.previousGuess[1];\n\t\t\tseenMoves = this.seenCards[value] || [];\n\n\t\t\tfor (let i = 0; i < seenMoves.length; i++){\n\t\t\t\tif(seenMoves[i] !== idx && this.availableMoves.indexOf(seenMoves[i]) >= 0) {\n\t\t\t\t\treturn seenMoves[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\trandomPosition() {\n\t\tlet randomIdx = parseInt(Math.random() * this.availableMoves.length)\n\t\treturn this.availableMoves[randomIdx];\n\t}\n};\n\nexport default ComputerPlayer;\n\n\n// WEBPACK FOOTER //\n// ./lib/computer_player.js","// The player class is a simple class for assigning points, previous guess, and player color. The majority of the functions of this class are used by the computer player, therefore leading to 'duck typing'\n\nclass Player {\n\tconstructor(color) {\n\t\tthis.points = 0;\n\t\tthis.previousGuess = null;\n\t\tthis.color = color;\n\t}\n\n\tsetGuess(valueSet) {\n\t\t// A method used for setting the previous guess, to avoid other objects directly updating instance variables\n\n\t\tthis.previousGuess = valueSet;\n\t}\n\n\tmatchFound() {\n\t\tthis.points++;\n\t}\n\n\treceiveRevealedCard(card, idx){\n\t\t//duck typing\n\t}\n\n\tgetInput(availableMoves) {\n\t\t//duck typing\n\t}\n\n\treceiveMatch(value, locations){\n\t\t//duck typing\n\t}\n\n}\n\nexport default Player;\n\n\n// WEBPACK FOOTER //\n// ./lib/player.js"],"sourceRoot":""}